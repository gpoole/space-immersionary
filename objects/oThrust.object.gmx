<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Thrust = 0 
Rotation = 0
running = false
init_time = 0

start_delay = 0
thrust_magnitude = 1
firing = false

duration = 500
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(running) {
    if(init_time == 0) {
        init_time = current_time
        start_time = init_time + start_delay
        end_time = start_time + duration
    }
    if(current_time &gt; start_time) {
        var player = instance_find(oPlayer, 0)

        if(Player_IsDead() || player.Fuel &lt;= 0) {
            // Puff of smoke
            instance_create(player.x, player.y, oSmoke)
            instance_destroy()
        } else {
            firing = true
            step = (current_time - start_time) / duration
            thrust_magnitude = (-1 * power(step, 2)) + 1
            with(player) {
                var magnitude = other.thrust_magnitude * other.Thrust * 500;
                var tx = magnitude * cos(degtorad(-other.Rotation));
                var ty = magnitude * sin(degtorad(-other.Rotation));
                physics_apply_force(x, y, tx, ty);
                
                // Smoke trails
                instance_create(x, y, oSmoke)
            }
            
            if(current_time &gt; end_time)
                instance_destroy()
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var player = instance_find(oPlayer, 0)

tx = Thrust * player.MaxThrust * cos(degtorad(180 - Rotation))
ty = Thrust * player.MaxThrust * sin(degtorad(180 - Rotation))


draw_set_colour(c_red)
draw_set_alpha(thrust_magnitude)
draw_line(player.x, player.y, player.x - tx, player.y - ty)
draw_set_alpha(1)
depth = -1

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
